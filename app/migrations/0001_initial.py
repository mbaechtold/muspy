# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-11-05 17:59
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [migrations.swappable_dependency(settings.AUTH_USER_MODEL)]

    operations = [
        migrations.CreateModel(
            name="Artist",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("mbid", models.CharField(max_length=36, unique=True)),
                ("name", models.CharField(max_length=512)),
                ("sort_name", models.CharField(max_length=512)),
                ("disambiguation", models.CharField(max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("type", models.IntegerField()),
                ("data", models.TextField()),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                )
            ],
            options={"db_table": "app_notification"},
        ),
        migrations.CreateModel(
            name="ReleaseGroup",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("mbid", models.CharField(max_length=36)),
                ("name", models.CharField(max_length=512)),
                ("type", models.CharField(max_length=16)),
                ("date", models.IntegerField()),
                ("is_deleted", models.BooleanField()),
                (
                    "artist",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="app.Artist"),
                ),
                (
                    "users_to_notify",
                    models.ManyToManyField(
                        related_name="new_release_groups",
                        through="app.Notification",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Star",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "release_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.ReleaseGroup"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={"db_table": "app_star"},
        ),
        migrations.CreateModel(
            name="UserArtist",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("date", models.DateTimeField(auto_now_add=True)),
                (
                    "artist",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="app.Artist"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("notify", models.BooleanField(default=True)),
                ("notify_album", models.BooleanField(default=True)),
                ("notify_single", models.BooleanField(default=True)),
                ("notify_ep", models.BooleanField(default=True)),
                ("notify_live", models.BooleanField(default=True)),
                ("notify_compilation", models.BooleanField(default=True)),
                ("notify_remix", models.BooleanField(default=True)),
                ("notify_other", models.BooleanField(default=True)),
                ("email_activated", models.BooleanField(default=False)),
                ("activation_code", models.CharField(max_length=16)),
                ("reset_code", models.CharField(max_length=16)),
                ("legacy_id", models.IntegerField(null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserSearch",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("search", models.CharField(max_length=512)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="releasegroup",
            name="users_who_starred",
            field=models.ManyToManyField(
                related_name="starred_release_groups",
                through="app.Star",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="release_group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="app.ReleaseGroup"
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="artist",
            name="users",
            field=models.ManyToManyField(through="app.UserArtist", to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name="userartist", unique_together=set([("user", "artist")])
        ),
        migrations.AlterUniqueTogether(
            name="star", unique_together=set([("user", "release_group")])
        ),
        migrations.AlterUniqueTogether(
            name="releasegroup", unique_together=set([("artist", "mbid")])
        ),
        migrations.AlterUniqueTogether(
            name="notification", unique_together=set([("user", "release_group")])
        ),
    ]
